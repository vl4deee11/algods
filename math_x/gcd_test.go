package math_x

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

// Даны два целых неотрицательных числа a и b.
// Требуется найти их наибольший общий делитель, т.е. наибольшее число, которое является делителем одновременно и a, и b
// Когда оно из чисел равно нулю, а другое отлично от нуля, их наибольшим общим делителем, согласно определению,
// будет это второе число.
// Когда оба числа равны нулю, результат не определён (подойдёт любое бесконечно большое число),
// мы положим в этом случае наибольший общий делитель равным нулю.

// =====================================================================================================================
// Поэтому можно говорить о таком правиле:
// если одно из чисел равно нулю, то их наибольший общий делитель равен второму числу.
// =====================================================================================================================

// gcd - за O(log(min(a,b))) - есть мат доказательство
func gcd(a, b int) int {
	if b == 0 {
		return a
	}

	return gcd(b, a%b)
}

// Наименьшее общее кратное для нескольких чисел — это наименьшее натуральное число,
// которое делится на каждое из этих чисел.
// lcm - за O(log(min(a,b))) -  по gcd
func lcm(a, b int) int {
	// Тут просто по формуле
	return (a * b) / gcd(a, b)
}

func TestGCDLCM(t *testing.T) {
	x1 := gcd(15, 5)
	x2 := lcm(15, 5)
	assert.Equal(t, 5, x1)
	assert.Equal(t, 15, x2)
}
